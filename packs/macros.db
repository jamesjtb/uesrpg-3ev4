{"_id":"3ZgNC1BjHjdiuGRu","name":"Athletics Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/unarmedProwess.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Athletics Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Athletics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Athletics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Athletics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Athletics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.MztK40w9TOSZVAzG"}}}
{"_id":"CMt7Weiq12EZoB8L","name":"Enchant Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/commodities/gems/gem-cluster-pink.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Enchant Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Enchant</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Enchant</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Enchant</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Enchant</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.EkeZ7fccPeCr8Cnk"}}}
{"_id":"D32fJZxHrwBk5p9R","name":"Stealth Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/blending.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Stealth Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Stealth</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Stealth</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Stealth</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Stealth</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.ty8ibD3Zlv9Jkqnw"}}}
{"_id":"F5OulyBJ0uCZVW6H","name":"Persuade Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/skills/social/diplomacy-handshake-yellow.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Persuade Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Persuade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Persuade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Persuade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Persuade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.TlyUFQgBN9E5I7jU"}}}
{"_id":"FLjcmFLctOWPouGE","name":"Alchemy Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/alchemist.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Alchemy Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Alchemy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Alchemy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Alchemy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Alchemy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.1wehXOdUIMnMPc1H"}}}
{"_id":"GPRGgQUmqUMNK7Tu","name":"Acrobatics Check","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/Archerskill_19.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Acrobatics Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Acrobatics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Acrobatics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Acrobatics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Acrobatics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.u1AleYvioWl2hOeE"}}}
{"_id":"KfCz7Bkh0gOQS2oB","name":"Commerce Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/skills/social/trading-justice-scale-yellow.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Commerce Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Commerce</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Commerce</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Commerce</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Commerce</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.Cu4qUNhAHXZXIcBN"}}}
{"_id":"LBlEJ2sfWZNrIsnu","name":"Restoration Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/life/heart-red-blue.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Restoration Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Restoration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Restoration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Restoration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Restoration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.2NWjlMZQPWTPEWTI"}}}
{"_id":"M4DffkIJXUYfMsGG","name":"Necromancy Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/death/skull-flames-white-blue.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Necromancy Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Necromancy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Necromancy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Necromancy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Necromancy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.OL4nN3Egfn66KBf3"}}}
{"_id":"Nbzc1ffz2FEXJNFs","name":"Alteration Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/masterOfMagicka.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Alteration Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Alteration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Alteration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Alteration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Alteration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.dvTtJ2vwxN935g3j"}}}
{"_id":"OTU7RPkVG2WN5F78","name":"Deceive Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/bigWords.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Deceive Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Deceive</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Deceive</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Deceive</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Deceive</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.kQNGSzScsXas0Oe8"}}}
{"_id":"P8T1lukPqm61WzJE","name":"Navigate Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/tools/navigation/map-chart-tan.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Navigate Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Navigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Navigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Navigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Navigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.t1kKqbyoUgs1xv4P"}}}
{"_id":"R5ATew8bm5CLj3zL","name":"Subterfuge Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/skills/social/theft-pickpocket-bribery-brown.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Subterfuge Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Subterfuge</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Subterfuge</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Subterfuge</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Subterfuge</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.J56f9FDYgelev2Cc"}}}
{"_id":"SL62mQoYrolN8mZq","name":"Mysticism Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/symbols/circled-gem-pink.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Mysticism Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Mysticism</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Mysticism</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Mysticism</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Mysticism</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.xzQt0RLhV4nvKF1Z"}}}
{"_id":"Yf7RclhXNqqRP21M","name":"Survival Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/OnewithWild.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Survival Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Survival</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Survival\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Survival</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Survival\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Survival</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Survival\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Survival\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Survival</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Survival\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Survival\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.ePjnCn89LsHKyybU"}}}
{"_id":"b2K1CAkdbH7vutmq","name":"Lore Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/sundries/books/book-stack.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Lore Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Lore</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Lore\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Lore</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Lore\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Lore</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Lore\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Lore\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Lore</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Lore\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Lore\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.012GfE5OphzghK1U"}}}
{"_id":"droyvFGXUUFHUg61","name":"Evade Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/skills/movement/feet-winged-boots-brown.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Evade Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Evade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Evade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Evade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Evade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Evade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Evade\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Evade\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Evade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Evade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Evade\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.xtnPM41WKwGpgaaO"}}}
{"_id":"iU8ACZegsBjafWQn","name":"Ride Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/environment/creatures/horse-brown.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Ride Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Ride</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Ride\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Ride</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Ride\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Ride</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Ride\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Ride\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Ride</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Ride\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Ride\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.2PkHZTeZGb2BDnNf"}}}
{"_id":"iuBAl8WOSopruTos","name":"Observe Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/attentionToDetail.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Observe Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Observe</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Observe\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Observe</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Observe\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Observe</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Observe\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Observe\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Observe</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Observe\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Observe\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.PiSMzwGs7IabLVdj"}}}
{"_id":"m5DLjeCX1K5mgNiF","name":"Command Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/sundries/flags/banner-pink.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Command Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Command</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Command\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Command</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Command\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Command</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Command\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Command\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Command</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Command\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Command\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.lB12wfYVEsuTNGtS"}}}
{"_id":"oIt3cj90E54mNfXk","name":"Logic Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/depthOfUnderstanding.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Logic Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Logic</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Logic\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Logic</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Logic\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Logic</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Logic\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Logic\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Logic</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Logic\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Logic\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.94qzocM3HN49iGsU"}}}
{"_id":"oX19RTuZmiy8QyOu","name":"Weapon Damage Roll Template","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/weapons/axes/axe-battle-black.webp","scope":"global","command":"// Change \"Your Weapon\" to any weapon name from your character sheet's \"Combat\" tab (Leave the quotes in)\n\nconst weapon_name = \"Your Weapon\"\n\n// DO NOT EDIT BELOW THIS LINE (Unless you want to)\n\nconst weapon_data = token.actor.items.find((item) => item.name === weapon_name)\n\nconst weapon_damage = weapon_data._data.data.damage\nconst weapon_damage2 = weapon_data._data.data.damage2\nconst superior = weapon_data._data.data.superior\nconst twoHand = weapon_data._data.data.weapon2H\nconst weapon_qualities = weapon_data._data.data.qualities\n\nlet hit_loc = \"\";\n\n    let hit = new Roll(\"1d10\");\n    hit.roll();\n\n    if (hit.total <= 5) {\n      hit_loc = \"Body\"\n    } else if (hit.total == 6) {\n      hit_loc = \"Right Leg\"\n    } else if (hit.total == 7) {\n      hit_loc = \"Left Leg\"\n    } else if (hit.total == 8) {\n      hit_loc = \"Right Arm\"\n    } else if (hit.total == 9) {\n      hit_loc = \"Left Arm\"\n    } else if (hit.total == 10) {\n      hit_loc = \"Head\"\n    }\n\n    let roll = new Roll(weapon_damage);\n    let supRoll = new Roll(weapon_damage);\n    let roll2H = new Roll(weapon_damage2);\n    let supRoll2H = new Roll(weapon_damage2);\n    roll.roll();\n    supRoll.roll();\n    roll2H.roll();\n    supRoll2H.roll();\n\n    if (twoHand === true) {\n      if (superior === true) {\n        const content = `Rolls damage for their <b>${weapon_name}!</b>\n          <p></p>\n          <b>Damage:</b> <b> [[${roll2H.total}]] [[${supRoll2H.total}]]</b> ${roll2H._formula}<p></p>\n          <b>Hit Location:</b> <b> [[${hit.total}]] </b> ${hit_loc}<p></p>\n          <b>Qualities:</b> ${weapon_qualities}`\n          roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n\n      } else {\n          const content = `Rolls damage for their <b>${weapon_name}!</b>\n            <p></p>\n            <b>Damage:</b> <b> [[${roll2H.total}]]</b> ${roll2H._formula}<p></p>\n            <b>Hit Location:</b> <b> [[${hit.total}]] </b> ${hit_loc}<p></p>\n            <b>Qualities:</b> ${weapon_qualities}`\n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        }\n\n    } else {\n        if (superior == true) {\n          const content = `Rolls damage for their <b>${weapon_name}!</b>\n            <p></p>\n            <b>Damage:</b> <b> [[${roll.total}]] [[${supRoll.total}]]</b> ${roll._formula}<p></p>\n            <b>Hit Location:</b> <b> [[${hit.total}]] </b> ${hit_loc}<p></p>\n            <b>Qualities:</b> ${weapon_qualities}`\n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n\n      } else {\n          const content = `Rolls damage for their <b>${weapon_name}!</b>\n            <p></p>\n            <b>Damage:</b> <b> [[${roll.total}]]</b> ${roll._formula}<p></p>\n            <b>Hit Location:</b> <b> [[${hit.total}]] </b> ${hit_loc}<p></p>\n            <b>Qualities:</b> ${weapon_qualities}`\n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n          }\n        }","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.YMZU30GnDfBOaqrX"}}}
{"_id":"omnQsYL5zIIsnlYp","name":"Illusion Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/observant.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Illusion Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Illusion</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Illusion</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Illusion</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Illusion</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.A0KQqutgthpp61Gq"}}}
{"_id":"qkx6NS2ZrvbPLJDN","name":"Investigate Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/tools/scribal/magnifying-glass.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Investigate Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Investigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Investigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Investigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Investigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.gDz2JiAe8qySphfD"}}}
{"_id":"sIgqqNwCxXS4V4Hz","name":"Conjuration Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/unholy/barrier-fire-pink.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Conjuration Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Conjuration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Conjuration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Conjuration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Conjuration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.AL34WKFyddjg6WCO"}}}
{"_id":"w9CDP1Fi54TzeF9v","name":"Destruction Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/fire/projectile-fireball-red-yellow.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Destruction Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Destruction</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Destruction</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Destruction</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Destruction</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.1mfzZGIN6In43Vxh"}}}
{"name":"Light","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/sundries/lights/lantern-iron-yellow.webp","scope":"global","command":"let dialogEditor = new Dialog({\n  title: `Light Source`,\n  buttons: {\n    none: {\n      label: `None`,\n      callback: () => {\n        token.update({\"dimLight\": 0, \"brightLight\": 0, \"lightAngle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    torch: {\n      label: `Candle`,\n      callback: () => {\n        token.update({\"dimLight\": 2, \"brightLight\": 1, \"lightAngle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    lamp: {\n      label: `Torch`,\n      callback: () => {\n        token.update({\"dimLight\": 4, \"brightLight\": 2, \"lightAngle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    bullseye: {\n      label: `Lantern`,\n      callback: () => {\n        token.update({\"dimLight\": 6, \"brightLight\": 3, \"lightAngle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    close: {\n      icon: \"<i class='fas fa-tick'></i>\",\n      label: `Close`\n    },\n  },\n  default: \"close\",\n  close: () => {}\n});\n\ndialogEditor.render(true)","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.pKzRyl5s2DVkvjtF"}},"_id":"yyJuxVsEWA9X8AzF"}
