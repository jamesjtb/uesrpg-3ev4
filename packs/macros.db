{"_id":"3ZgNC1BjHjdiuGRu","name":"Athletics Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/unarmedProwess.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Athletics Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Athletics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Athletics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Athletics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Athletics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Athletics\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.MztK40w9TOSZVAzG"}}}
{"_id":"CMt7Weiq12EZoB8L","name":"Enchant Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/commodities/gems/gem-cluster-pink.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Enchant Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Enchant</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Enchant</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Enchant</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Enchant</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Enchant\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.EkeZ7fccPeCr8Cnk"}}}
{"_id":"D32fJZxHrwBk5p9R","name":"Stealth Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/blending.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Stealth Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Stealth</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Stealth</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Stealth</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Stealth</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Stealth\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.ty8ibD3Zlv9Jkqnw"}}}
{"_id":"F5OulyBJ0uCZVW6H","name":"Persuade Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/skills/social/diplomacy-handshake-yellow.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Persuade Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Persuade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Persuade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Persuade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Persuade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Persuade\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.TlyUFQgBN9E5I7jU"}}}
{"_id":"FLjcmFLctOWPouGE","name":"Alchemy Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/alchemist.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Alchemy Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Alchemy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Alchemy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Alchemy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Alchemy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Alchemy\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.1wehXOdUIMnMPc1H"}}}
{"_id":"GPRGgQUmqUMNK7Tu","name":"Acrobatics Check","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/Archerskill_19.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Acrobatics Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Acrobatics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Acrobatics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Acrobatics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Acrobatics</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Acrobatics\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.u1AleYvioWl2hOeE"}}}
{"_id":"KfCz7Bkh0gOQS2oB","name":"Commerce Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/skills/social/trading-justice-scale-yellow.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Commerce Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Commerce</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Commerce</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Commerce</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Commerce</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Commerce\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.Cu4qUNhAHXZXIcBN"}}}
{"_id":"LBlEJ2sfWZNrIsnu","name":"Restoration Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/life/heart-red-blue.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Restoration Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Restoration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Restoration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Restoration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Restoration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Restoration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.2NWjlMZQPWTPEWTI"}}}
{"_id":"M4DffkIJXUYfMsGG","name":"Necromancy Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/death/skull-flames-white-blue.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Necromancy Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Necromancy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Necromancy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Necromancy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Necromancy</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Necromancy\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.OL4nN3Egfn66KBf3"}}}
{"_id":"Nbzc1ffz2FEXJNFs","name":"Alteration Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/masterOfMagicka.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Alteration Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Alteration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Alteration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Alteration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Alteration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Alteration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.dvTtJ2vwxN935g3j"}}}
{"_id":"OTU7RPkVG2WN5F78","name":"Deceive Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/bigWords.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Deceive Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Deceive</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Deceive</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Deceive</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Deceive</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Deceive\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.kQNGSzScsXas0Oe8"}}}
{"_id":"P8T1lukPqm61WzJE","name":"Navigate Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/tools/navigation/map-chart-tan.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Navigate Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Navigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Navigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Navigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Navigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Navigate\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.t1kKqbyoUgs1xv4P"}}}
{"_id":"R5ATew8bm5CLj3zL","name":"Subterfuge Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/skills/social/theft-pickpocket-bribery-brown.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Subterfuge Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Subterfuge</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Subterfuge</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Subterfuge</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Subterfuge</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Subterfuge\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.J56f9FDYgelev2Cc"}}}
{"_id":"SL62mQoYrolN8mZq","name":"Mysticism Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/symbols/circled-gem-pink.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Mysticism Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Mysticism</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Mysticism</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Mysticism</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Mysticism</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Mysticism\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.xzQt0RLhV4nvKF1Z"}}}
{"_id":"Yf7RclhXNqqRP21M","name":"Survival Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/OnewithWild.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Survival Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Survival</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Survival\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Survival</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Survival\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Survival</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Survival\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Survival\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Survival</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Survival\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Survival\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.ePjnCn89LsHKyybU"}}}
{"_id":"b2K1CAkdbH7vutmq","name":"Lore Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/sundries/books/book-stack.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Lore Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Lore</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Lore\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Lore</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Lore\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Lore</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Lore\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Lore\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Lore</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Lore\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Lore\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.012GfE5OphzghK1U"}}}
{"_id":"droyvFGXUUFHUg61","name":"Evade Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/skills/movement/feet-winged-boots-brown.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Evade Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Evade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Evade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Evade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Evade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Evade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Evade\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Evade\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Evade</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Evade\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Evade\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.xtnPM41WKwGpgaaO"}}}
{"_id":"iU8ACZegsBjafWQn","name":"Ride Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/environment/creatures/horse-brown.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Ride Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Ride</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Ride\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Ride</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Ride\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Ride</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Ride\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Ride\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Ride</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Ride\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Ride\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.2PkHZTeZGb2BDnNf"}}}
{"_id":"iuBAl8WOSopruTos","name":"Observe Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/attentionToDetail.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Observe Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Observe</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Observe\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Observe</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Observe\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Observe</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Observe\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Observe\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Observe</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Observe\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Observe\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.PiSMzwGs7IabLVdj"}}}
{"_id":"m5DLjeCX1K5mgNiF","name":"Command Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/sundries/flags/banner-pink.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Command Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Command</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Command\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Command</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Command\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Command</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Command\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Command\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Command</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Command\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Command\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.lB12wfYVEsuTNGtS"}}}
{"_id":"oIt3cj90E54mNfXk","name":"Logic Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/depthOfUnderstanding.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Logic Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Logic</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Logic\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Logic</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Logic\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Logic</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Logic\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Logic\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Logic</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Logic\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Logic\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.94qzocM3HN49iGsU"}}}
{"_id":"oX19RTuZmiy8QyOu","name":"Weapon Damage Roll Template","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/weapons/axes/axe-battle-black.webp","scope":"global","command":"// Change \"Your Weapon\" to any weapon name from your character sheet's \"Combat\" tab (Leave the quotes in)\n\nconst weapon_name = \"Your Weapon\"\n\n// DO NOT EDIT BELOW THIS LINE (Unless you want to)\n\nconst weapon_data = token.actor.items.find((item) => item.name === weapon_name)\n\nconst weapon_damage = weapon_data._data.data.damage\nconst weapon_damage2 = weapon_data._data.data.damage2\nconst superior = weapon_data._data.data.superior\nconst twoHand = weapon_data._data.data.weapon2H\nconst weapon_qualities = weapon_data._data.data.qualities\n\nlet hit_loc = \"\";\n\n    let hit = new Roll(\"1d10\");\n    hit.roll();\n\n    if (hit.total <= 5) {\n      hit_loc = \"Body\"\n    } else if (hit.total == 6) {\n      hit_loc = \"Right Leg\"\n    } else if (hit.total == 7) {\n      hit_loc = \"Left Leg\"\n    } else if (hit.total == 8) {\n      hit_loc = \"Right Arm\"\n    } else if (hit.total == 9) {\n      hit_loc = \"Left Arm\"\n    } else if (hit.total == 10) {\n      hit_loc = \"Head\"\n    }\n\n    let roll = new Roll(weapon_damage);\n    let supRoll = new Roll(weapon_damage);\n    let roll2H = new Roll(weapon_damage2);\n    let supRoll2H = new Roll(weapon_damage2);\n    roll.roll();\n    supRoll.roll();\n    roll2H.roll();\n    supRoll2H.roll();\n\n    if (twoHand === true) {\n      if (superior === true) {\n        const content = `Rolls damage for their <b>${weapon_name}!</b>\n          <p></p>\n          <b>Damage:</b> <b> [[${roll2H.total}]] [[${supRoll2H.total}]]</b> ${roll2H._formula}<p></p>\n          <b>Hit Location:</b> <b> [[${hit.total}]] </b> ${hit_loc}<p></p>\n          <b>Qualities:</b> ${weapon_qualities}`\n          roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n\n      } else {\n          const content = `Rolls damage for their <b>${weapon_name}!</b>\n            <p></p>\n            <b>Damage:</b> <b> [[${roll2H.total}]]</b> ${roll2H._formula}<p></p>\n            <b>Hit Location:</b> <b> [[${hit.total}]] </b> ${hit_loc}<p></p>\n            <b>Qualities:</b> ${weapon_qualities}`\n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        }\n\n    } else {\n        if (superior == true) {\n          const content = `Rolls damage for their <b>${weapon_name}!</b>\n            <p></p>\n            <b>Damage:</b> <b> [[${roll.total}]] [[${supRoll.total}]]</b> ${roll._formula}<p></p>\n            <b>Hit Location:</b> <b> [[${hit.total}]] </b> ${hit_loc}<p></p>\n            <b>Qualities:</b> ${weapon_qualities}`\n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n\n      } else {\n          const content = `Rolls damage for their <b>${weapon_name}!</b>\n            <p></p>\n            <b>Damage:</b> <b> [[${roll.total}]]</b> ${roll._formula}<p></p>\n            <b>Hit Location:</b> <b> [[${hit.total}]] </b> ${hit_loc}<p></p>\n            <b>Qualities:</b> ${weapon_qualities}`\n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n          }\n        }","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.YMZU30GnDfBOaqrX"}}}
{"_id":"omnQsYL5zIIsnlYp","name":"Illusion Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"systems/uesrpg-d100/images/Icons/observant.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Illusion Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Illusion</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Illusion</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Illusion</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Illusion</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Illusion\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.A0KQqutgthpp61Gq"}}}
{"_id":"qkx6NS2ZrvbPLJDN","name":"Investigate Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/tools/scribal/magnifying-glass.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Investigate Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Investigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Investigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Investigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Investigate</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Investigate\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.gDz2JiAe8qySphfD"}}}
{"_id":"sIgqqNwCxXS4V4Hz","name":"Conjuration Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/unholy/barrier-fire-pink.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Conjuration Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Conjuration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Conjuration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Conjuration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Conjuration</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Conjuration\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.AL34WKFyddjg6WCO"}}}
{"_id":"w9CDP1Fi54TzeF9v","name":"Destruction Roll","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/magic/fire/projectile-fireball-red-yellow.webp","scope":"global","command":"let d = new Dialog({\n    title: \"Apply Roll Modifier\",\n    content: `<form>\n                <div class=\"dialogForm\">\n                <label><b>Destruction Modifier: </b></label><input placeholder=\"ex. -20, +10\" id=\"playerInput\" value=\"0\" style=\" text-align: center; width: 50%; border-style: groove; float: right;\" type=\"text\"></input></div>\n              </form>`,\n    buttons: {\n      one: {\n        label: \"Roll!\",\n        callback: html => {\n          const playerInput = parseInt(html.find('[id=\"playerInput\"]').val());\n          let roll = new Roll(\"1d100\");\n          roll.roll({async:false});\n        \n          if (roll.total === token.actor.data.data.lucky_numbers.ln1 || roll.total == token.actor.data.data.lucky_numbers.ln2 || roll.total == token.actor.data.data.lucky_numbers.ln3 || roll.total == token.actor.data.data.lucky_numbers.ln4 || roll.total == token.actor.data.data.lucky_numbers.ln5) {\n            const content = `Rolls for <b>Destruction</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (roll.total === token.actor.data.data.unlucky_numbers.ul1 || roll.total == token.actor.data.data.unlucky_numbers.ul2 || roll.total == token.actor.data.data.unlucky_numbers.ul3 || roll.total == token.actor.data.data.unlucky_numbers.ul4 || roll.total == token.actor.data.data.unlucky_numbers.ul5) {\n            const content = `Rolls for <b>Destruction</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            <span style='color:red; font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n        \n          } else if (token.actor.data.data.wounded === true) {\n            const content = `Rolls for <b>Destruction</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value}]] </b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n  \n          } else {\n            const content = `Rolls for <b>Destruction</b>!\n            <p></p><b>Target Number: [[${token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value}]]</b> <p></p>\n            <b>Result: [[${roll.total}]]</b><p></p>\n            ${roll.total<=(token.actor.items.find(entry => entry.name === \"Destruction\").data.data.value + playerInput) ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color:red; font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n        \n            roll.toMessage({type: CONST.CHAT_MESSAGE_TYPES.ROLL, user: game.user._id, speaker: ChatMessage.getSpeaker(), content: content});\n            }\n        }\n      },\n      two: {\n        label: \"Cancel\",\n        callback: html => console.log(\"Cancelled\")\n      }\n    },\n    default: \"one\",\n    close: html => console.log()\n  });\n  d.render(true);","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.1mfzZGIN6In43Vxh"}}}
{"name":"Light","type":"script","author":"KoTybT0dunV5wS6T","img":"icons/sundries/lights/lantern-iron-yellow.webp","scope":"global","command":"let dialogEditor = new Dialog({\n  title: `Light Source`,\n  buttons: {\n    none: {\n      label: `None`,\n      callback: () => {\n        token.update({\"dimLight\": 0, \"brightLight\": 0, \"lightAngle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    torch: {\n      label: `Candle`,\n      callback: () => {\n        token.update({\"dimLight\": 2, \"brightLight\": 1, \"lightAngle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    lamp: {\n      label: `Torch`,\n      callback: () => {\n        token.update({\"dimLight\": 4, \"brightLight\": 2, \"lightAngle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    bullseye: {\n      label: `Lantern`,\n      callback: () => {\n        token.update({\"dimLight\": 6, \"brightLight\": 3, \"lightAngle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    close: {\n      icon: \"<i class='fas fa-tick'></i>\",\n      label: `Close`\n    },\n  },\n  default: \"close\",\n  close: () => {}\n});\n\ndialogEditor.render(true)","folder":null,"sort":0,"permission":{"default":0,"inSimu0FutxmlwqN":3,"KoTybT0dunV5wS6T":3},"flags":{"core":{"sourceId":"Macro.pKzRyl5s2DVkvjtF"}},"_id":"yyJuxVsEWA9X8AzF"}
{"_id":"W3OLyTDgtuemN7Wv","name":"All-In-One Spellcast","type":"script","author":"mPl8OlEMbxuodWQX","img":"icons/sundries/books/book-open-purple.webp","scope":"global","command":"//Select Spell to Cast\nconst allSpells = token.actor.items.filter(i => i.type === \"spell\");\n\n//Sort Alphabetically\nallSpells.sort(function (a,b) {\n    let nameA = a.name.toUpperCase();\n    let nameB = b.name.toUpperCase();\n\n    if (nameA < nameB){\n        return -1\n    } if (nameA > nameB){\n        return 1\n    } return 0\n});\n\n//Spell Data Arrays\nconst alterationSpells = [];\nconst conjurationSpells = [];\nconst destructionSpells = [];\nconst illusionSpells = [];\nconst mysticismSpells = [];\nconst necromancySpells = [];\nconst restorationSpells = [];\n\n//Spell Option HTML Array\nconst alterationOptions = [];\nconst conjurationOptions = [];\nconst destructionOptions = [];\nconst illusionOptions = [];\nconst mysticismOptions = [];\nconst necromancyOptions = [];\nconst restorationOptions = [];\n\n//Magic School Options\nconst schoolOptions = [];\n\n//Push spells into Data Arrays and Option Arrays\nfor (let spell of allSpells){\n    let school = spell.data.data.school;\n\n    if (school === \"alteration\"){\n        let option = `<option>${spell.name}</option>`;\n        alterationOptions.push(option);\n        alterationSpells.push(spell);\n    } else if (school === \"conjuration\"){\n        let option = `<option>${spell.name}</option>`;\n        conjurationOptions.push(option);\n        conjurationSpells.push(spell);\n    } else if (school === \"destruction\"){\n        let option = `<option>${spell.name}</option>`;\n        destructionOptions.push(option);\n        destructionSpells.push(spell);\n    } else if (school === \"illusion\"){\n        let option = `<option>${spell.name}</option>`;\n        illusionOptions.push(option);\n        illusionSpells.push(spell);\n    } else if (school === \"mysticism\"){\n        let option = `<option>${spell.name}</option>`;\n        mysticismOptions.push(option);\n        mysticismSpells.push(spell);\n    } else if (school === \"necromancy\"){\n        let option = `<option>${spell.name}</option>`;\n        necromancyOptions.push(option);\n        necromancySpells.push(spell);\n    } else if (school === \"restoration\"){\n        let option = `<option>${spell.name}</option>`;\n        restorationOptions.push(option);\n        restorationSpells.push(spell);\n    } \n}\n\n//Create Options for Schools if Character has spells in that school\nif (alterationSpells.length > 0){\n    let schoolChoice = `<option>Alteration</option>`;\n    schoolOptions.push(schoolChoice);\n}\nif (conjurationSpells.length > 0){\n    let schoolChoice = `<option>Conjuration</option>`;\n    schoolOptions.push(schoolChoice);\n}\nif (destructionSpells.length > 0){\n    let schoolChoice = `<option>Destruction</option>`;\n    schoolOptions.push(schoolChoice);\n}\nif (illusionSpells.length > 0){\n    let schoolChoice = `<option>Illusion</option>`;\n    schoolOptions.push(schoolChoice);\n}\nif (mysticismSpells.length > 0){\n    let schoolChoice = `<option>Mysticism</option>`;\n    schoolOptions.push(schoolChoice);\n}\nif (necromancySpells.length > 0){\n    let schoolChoice = `<option>Necromancy</option>`;\n    schoolOptions.push(schoolChoice);\n}\nif (restorationSpells.length > 0){\n    let schoolChoice = `<option>Restoration</option>`;\n    schoolOptions.push(schoolChoice);\n}\n\n//Search for Talents that affect Spellcasting Costs\nconst hasCreative = token.actor.items.find(i => i.type === \"talent\" && i.name === \"Creative\") ? true : false;\nconst hasForceOfWill = token.actor.items.find(i => i.type === \"talent\" && i.name === \"Force of Will\") ? true : false;\nconst hasMethodical = token.actor.items.find(i => i.type === \"talent\" && i.name === \"Methodical\") ? true : false;\nconst hasOvercharge = token.actor.items.find(i => i.type === \"talent\" && i.name === \"Overcharge\") ? true : false;\nconst hasMagickaCycling = token.actor.items.find(i => i.type === \"talent\" && i.name === \"Magicka Cycling\") ? true : false;\n\n//Add options in Dialog based on Talents and Traits\nlet overchargeOption = \"\";\nlet magickaCyclingOption = \"\";\n\nif (hasOvercharge){\n    overchargeOption = `<div>\n                            <label>\n                                <input type=\"checkbox\" id=\"Overcharge\"/>\n                                <b>Overcharge:</b> <i>Roll damage twice and use highest value (spell cost doubled)</i>\n                            </label>\n                        </div>`\n}\n\nif (hasMagickaCycling){\n    magickaCyclingOption = `<div>\n                        <label>\n                            <input type=\"checkbox\" id=\"MagickaCycling\"/>\n                            <b>Magicka Cycling:</b> <i>Restraint value x2, but backfire on failure<i>\n                        </label>\n                      </div>`\n}\n\nconst d = new Dialog({\n    title: \"Select School\",\n    content: `<form>\n                <div style=\"text-align: center;\">\n\n                    <div>\n                        <h2>Select School of Magic</h2>\n                        <select id=\"schoolSelect\">\n                            ${schoolOptions.join(\"\")}\n                        </select>\n                    </div>\n                    <hr>\n\n                </div>\n              </form>`,\n    buttons: {\n        one: {\n            label: \"Submit\",\n            callback: html => {\n                const schoolSelect = (html.find(`[id=\"schoolSelect\"]`).val().toLowerCase() + \"Options\");\n                const schoolSelectName = html.find(`[id=\"schoolSelect\"]`).val();\n                let option = \"\";\n\n                if (schoolSelect == \"alterationOptions\"){\n                    option = alterationOptions;\n                } else if (schoolSelect == \"conjurationOptions\"){\n                    option = conjurationOptions;\n                } else if (schoolSelect == \"destructionOptions\"){\n                    option = destructionOptions;\n                } else if (schoolSelect == \"illusionOptions\"){\n                    option = illusionOptions;\n                } else if (schoolSelect == \"mysticismOptions\"){\n                    option = mysticismOptions;\n                } else if (schoolSelect == \"necromancyOptions\"){\n                    option = necromancyOptions;\n                } else if (schoolSelect == \"restorationOptions\"){\n                    option = restorationOptions;\n                }\n\n\n                const m = new Dialog({\n                    title: \"Cast Spell\",\n                    content: `<form>\n                                <div>\n\n                                    <div>\n                                        <h2 style=\"text-align: center;\">Select Spell to Cast</h2>\n                                        <select id=\"selectSpellName\">\n                                            ${option.join(\"\")}\n                                        </select>\n\n                                        <label style=\"float: right; margin-right: 5px; text-align: center;\"><b>Skill Modifier: </b>\n                                            <input style=\"width: 60px;\" type=\"number\" value=\"0\" id=\"playerInput\"/>\n                                        </label>\n                                    </div>\n\n                                        <hr>\n\n                                            <div>\n                                                <label>\n                                                    <input type=\"checkbox\" id=\"Restraint\"/>\n                                                    <b>Spell Restraint:</b> <i>Reduces cost of spell by WP Bonus</i>\n                                                </label>\n                                            </div>\n\n\n                                            <div>\n                                                <label>\n                                                    <input type=\"checkbox\" id=\"Overload\"/>\n                                                    <b>Overload:</b> <i>Additional effects if not Restrained</i>\n                                                </label>\n                                            </div>\n\n                                            ${magickaCyclingOption}\n\n                                            ${overchargeOption}\n\n                                        <hr>\n\n                                </div>\n                              </form>`,\n                    buttons: {\n                        one: {\n                            label: \"Cast Spell\",\n                            callback: html => {\n                                const selectSpellName = html.find(`[id=\"selectSpellName\"]`).val();\n                                const castSpell = allSpells.find(i => i.name == selectSpellName);\n                                const spellDamage = castSpell.data.data.damage;\n                                const spellCost = castSpell.data.data.cost;\n                                let spellRestraint = 0;\n                                let stackCostMod = 0;\n\n                                //Assign Tags for Chat Output\n                                const isRestrained = html.find(`[id=\"Restraint\"]`)[0].checked;\n                                const isOverloaded = html.find(`[id=\"Overload\"]`)[0].checked;\n                                let isMagickaCycled = \"\";\n                                let isOvercharged = \"\";\n\n                                if (hasMagickaCycling){\n                                    isMagickaCycled = html.find(`[id=\"MagickaCycling\"]`)[0].checked;\n                                }\n\n                                if (hasOvercharge){\n                                    isOvercharged = html.find(`[id=\"Overcharge\"]`)[0].checked;\n                                }\n\n                                const tags = [];\n\n\n                                //Functions for Spell Modifiers\n                                if (isRestrained){\n                                    let restraint = `<span style=\"border: none; border-radius: 30px; background-color: rgba(29, 97, 187, 0.80); color: white; text-align: center; font-size: xx-small; padding: 5px;\">Restraint</span>`;\n                                    tags.push(restraint);\n\n                                    //Determine cost mod based on talents and other modifiers\n                                    if (hasCreative && castSpell.data.data.spellType === \"unconventional\"){\n                                        stackCostMod = stackCostMod - 1;\n                                    } \n\n                                    if (hasMethodical && castSpell.data.data.spellType === \"conventional\"){\n                                        stackCostMod = stackCostMod - 1;\n                                    }\n                                    \n                                    if(hasForceOfWill){\n                                        stackCostMod = stackCostMod - 1;\n                                    }\n\n                                    spellRestraint = 0 - Math.floor(token.actor.data.data.characteristics.wp.total/10);\n                                }\n\n                                if (isOverloaded){\n                                    let overload = `<span style=\"border: none; border-radius: 30px; background-color: rgba(161, 2, 2, 0.80); color: white; text-align: center; font-size: xx-small; padding: 5px;\">Overload</span>`;\n                                    tags.push(overload);\n                                }\n\n                                if (isMagickaCycled){\n                                    let cycled = `<span style=\"border: none; border-radius: 30px; background-color: rgba(126, 40, 224, 0.80); color: white; text-align: center; font-size: xx-small; padding: 5px;\">Magicka Cycle</span>`;\n                                    tags.push(cycled);\n                                    spellRestraint = 0 - (2 * Math.floor(token.actor.data.data.characteristics.wp.total/10));\n                                }\n\n                                //Determine Magic Skill for the Test\n                                let magicSkill = \"\";\n                                let magicSkillTarget = \"\";\n                                let magicSkillName = \"\";\n                                const skillModifier = parseInt(html.find(`[id=\"playerInput\"]`).val());\n                                const magicSkillRoll = new Roll(\"1d100\");\n                                magicSkillRoll.roll();\n\n                                let luckyNumber = token.actor.data.data.lucky_numbers;\n                                let unluckyNumber = token.actor.data.data.unlucky_numbers;\n                                let skillResult = \"\";\n\n                                if (token.actor.type === \"npc\"){\n                                    magicSkill = token.actor.data.data.professions.magic;\n                                    magicSkillName = \"Magic Roll\";\n                                    magicSkillTarget = magicSkill + skillModifier + token.actor.data.data.woundPenalty;\n\n                                    if (magicSkillRoll.result == luckyNumber.ln1||magicSkillRoll.result == luckyNumber.ln2||magicSkillRoll.result == luckyNumber.ln3||magicSkillRoll.result == luckyNumber.ln4||magicSkillRoll.result == luckyNumber.ln5\n                                        ||magicSkillRoll.result == luckyNumber.ln6||magicSkillRoll.result == luckyNumber.ln7||magicSkillRoll.result == luckyNumber.ln8||magicSkillRoll.result == luckyNumber.ln9||magicSkillRoll.result == luckyNumber.ln10){\n                                        skillResult = `<span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n                                    } else if (magicSkillRoll.result == unluckyNumber.ul1||magicSkillRoll.result == unluckyNumber.ul2||magicSkillRoll.result == unluckyNumber.ul3||magicSkillRoll.result == unluckyNumber.ul4||magicSkillRoll.result == unluckyNumber.ul5){\n                                        skillResult = `<span style='color:rgb(168, 5, 5); font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n                                    } else {\n                                        skillResult = `<b>${magicSkillRoll.total <= magicSkillTarget ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color: rgb(168, 5, 5); font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n                                    }\n\n                                } else {\n                                    magicSkill = token.actor.items.find(i => i.type === \"magicSkill\" && i.name == schoolSelectName);\n                                    magicSkillName = magicSkill.name;\n                                    magicSkillTarget = magicSkill.data.data.value + skillModifier + token.actor.data.data.woundPenalty;\n\n                                    if (magicSkillRoll.result == luckyNumber.ln1||magicSkillRoll.result == luckyNumber.ln2||magicSkillRoll.result == luckyNumber.ln3||magicSkillRoll.result == luckyNumber.ln4||magicSkillRoll.result == luckyNumber.ln5){\n                                        skillResult = `<span style='color:green; font-size:120%;'> <b>LUCKY NUMBER!</b></span>`\n                                    } else if (magicSkillRoll.result == unluckyNumber.ul1||magicSkillRoll.result == unluckyNumber.ul2||magicSkillRoll.result == unluckyNumber.ul3||magicSkillRoll.result == unluckyNumber.ul4||magicSkillRoll.result == unluckyNumber.ul5){\n                                        skillResult = `<span style='color:rgb(168, 5, 5); font-size:120%;'> <b>UNLUCKY NUMBER!</b></span>`\n                                    } else {\n                                        skillResult = `<b>${magicSkillRoll.total <= magicSkillTarget ? \" <span style='color:green; font-size: 120%;'> <b>SUCCESS!</b></span>\" : \" <span style='color: rgb(168, 5, 5); font-size: 120%;'> <b>FAILURE!</b></span>\"}`\n                                    }\n                                }\n\n\n                                //If spell has damage value it outputs to Chat, otherwise no damage will be shown in Chat Output\n                                const damageRoll = new Roll(spellDamage);\n                                let damageEntry = \"\";\n\n                                if (spellDamage !== '' && spellDamage !== null){\n                                    damageRoll.roll();\n                                    damageEntry = `<label style=\"margin: 5px;\">\n                                                        <b>Damage: [[${damageRoll.result}]]</b> ${damageRoll.formula}</span>\n                                                    </label>`\n                                }\n\n                                const hitLocRoll = new Roll(\"1d10\");\n                                hitLocRoll.roll();\n                                let hitLoc = \"\";\n\n                                if (hitLocRoll.result <= 5) {\n                                    hitLoc = \"Body\"\n                                  } else if (hitLocRoll.result == 6) {\n                                    hitLoc = \"Right Leg\"\n                                  } else if (hitLocRoll.result == 7) {\n                                    hitLoc = \"Left Leg\"\n                                  } else if (hitLocRoll.result == 8) {\n                                    hitLoc = \"Right Arm\"\n                                  } else if (hitLocRoll.result == 9) {\n                                    hitLoc = \"Left Arm\"\n                                  } else if (hitLocRoll.result == 10) {\n                                    hitLoc = \"Head\"\n                                  }\n\n                                let displayCost = 0;\n                                let actualCost = spellCost + spellRestraint + stackCostMod;\n\n                                //Double Cost of Spell if Overcharge Talent is used\n                                if (isOvercharged){\n                                    actualCost = actualCost * 2;\n                                    let overcharge = `<span style=\"border: none; border-radius: 30px; background-color: rgba(219, 135, 0, 0.8); color: white; text-align: center; font-size: xx-small; padding: 5px;\">Overcharge</span>`;\n                                    tags.push(overcharge);\n                                }\n\n                                if (actualCost < 1){\n                                    displayCost = 1;\n                                } else {\n                                    displayCost = actualCost;\n                                }\n\n                                let contentString = `<h2 style=\"font-size: large; margin-top: 5px;\"><img style=\"float: left; height: 24px; width: 24px; margin: 0 5px 5px 5px; border: none;\" src=${castSpell.img}></im>${selectSpellName}</h2>\n                                                 <div>\n                                                    <label style=\"margin: 5px;\">\n                                                        <b>${magicSkillName} Target Number: [[${magicSkillTarget}]]</b>\n                                                    </label>\n                                                </div>\n                                                <div>\n                                                    <label style=\"margin: 5px;\">\n                                                        <b>${magicSkillName} Result: [[${magicSkillRoll.result}]]</b>\n                                                    </label>\n                                                </div>\n                                                <hr>\n\n                                                    <div style=\"text-align: center;\">\n                                                        <label style=\"margin: 5px;\">\n                                                            ${skillResult}\n                                                        </label>\n                                                    </div>\n                                                 </div></b>\n\n                                                 <hr>    \n\n                                                 <div>\n                                                    ${damageEntry}\n                                                    <p></p>\n                                                    <label style=\"margin: 5px;\">\n                                                        <b>Hit Location: [[${hitLocRoll.result}]]</b> ${hitLoc}\n                                                    </label>\n                                                    <p></p>\n                                                    <label style=\"margin: 5px;\">\n                                                        <b>Spell Cost: [[${displayCost}]]</b>\n                                                        <p></p>\n                                                        <span style=\"margin: 5px;\"><i>Cost: ${spellCost} || Spell Restraint: ${spellRestraint} || Other: ${stackCostMod}</i></span>\n                                                    </label>\n                                                    <hr>\n                                                    <label>\n                                                        <b>Attributes:</b> ${castSpell.data.data.attributes}\n                                                    </label>\n                                                 </div>`\n\n                                ChatMessage.create({\n                                    user: game.user.id,\n                                    speaker: ChatMessage.getSpeaker(),\n                                    type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n                                    flavor: tags.join(\"\"),\n                                    content: contentString,\n                                    roll: magicSkillRoll\n                                })\n                            }\n                        },\n                        two: {\n                            label: \"Cancel\",\n                            callback: html => console.log(\"Cancelled\")\n                        }\n                    },\n                    default: \"one\",\n                    close: html => console.log()\n                });\n\n                m.render(true);\n            }\n        },\n        two: {\n            label: \"Cancel\",\n            callback: html => console.log(\"Cancelled\")\n        }\n    },\n    default: \"one\",\n    close: html => console.log()\n});\n\nd.render(true);","folder":null,"sort":0,"permission":{"default":0,"mPl8OlEMbxuodWQX":3},"flags":{}}
